:bitbucket_url: https://bitbucket.org/emailhippo/emh-rtapiv3-docs/src/master/docs/data-dictionary.rst

.. _Data Dictionary:
.. _entity defintitions: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities
.. _swagger.io: https://swagger.io
.. _Endpoint Definitions: https://api.hippoapi.com/swagger/
.. _WADL : https://api.hippoapi.com/swagger/v3/swagger.json
.. _version: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/VersionInfo/Version.cs
.. _meta: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/MetaInfo/Meta.cs
.. _disposition: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Dispositions/Disposition.cs
.. _emailVerification: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/EmailVerificationInfo/EmailVerification.cs
.. _infrastructure: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/InfrastructureInfo/Infrastructure.cs
.. _sendAssess: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/MailSend/SendAssess.cs
.. _spamAssess: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/SpamData/SpamAssess.cs
.. _spamTrapAssess: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/SpamTrapData/SpamTrapAssess.cs
.. _hippoTrust: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Trust/HippoTrust.cs
.. _social: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/SocialInfo/Social.cs
.. _domain: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/DomainInfo/Domain.cs
.. _performance: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/PerformanceInfo/Performance.cs
.. _diagnostic: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/DiagnosticInfo/Diagnostic.cs
.. _syntaxVerification: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/EmailVerificationInfo/SyntaxVerification.cs
.. _dnsVerification: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/EmailVerificationInfo/DnsVerification.cs
.. _mailboxVerification: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/EmailVerificationInfo/MailboxVerification.cs
.. _result: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Statuses/Status.cs
.. _reason: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Statuses/AdditionalStatus.cs
.. _record: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Net/Record.cs
.. _mxrecord: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Net/MxRecord.cs
.. _syntaxReason: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Statuses/SyntaxVerificationReason.cs
.. _mailInfrastructure: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/InfrastructureInfo/Mail/MailInfrastructure.cs
.. _webInfrastructure: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/InfrastructureInfo/Web/WebInfrastructure.cs
.. _serviceTypeId: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/InfrastructureInfo/Mail/MailInfrastructureServiceType.cs
.. _sendAssesType : https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/MailSend/SendAssessType.cs
.. _actionRecommendationType: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/SpamData/SpamDataAssessType.cs
.. _blockList: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/SpamData/BlockList.cs
.. _trustLevelType: https://github.com/emailhippo/email-verify-api-v3-client-wrapper-entities/blob/master/src/Components/EmailHippo.EmailVerify.Api.V3.Entities/V_3_0_0/Trust/TrustLevelType.cs

Data dictionary for API v3
==========================
A response is a message consisting of a standard :term:`HTTP` header and body.
The body of the message contains the detail of the message (e.g. the :term:`JSON` data with email verification detail).
The header of the message contains general :term:`HTTP` information such as :term:`HTTP` status codes.

Open source common entities
---------------------------
Since v3 (code named 'More'), all common entities are avaialable on GitHub. Email Hippo uses these entities internally and exposes same over all of our v3 endpoints.

For a full definition of all of our entities and types, see the GitHub repository @ `entity defintitions`_.

Related information
-------------------
* For a full swagger.io based definition see the `Endpoint Definitions`_
* View the full swagger.io compatible `WADL`_


Response body content
---------------------
Reponses are complex types. The table below shows the root fields.

**Notes**:

* Click the 'Field Name' entry for a link to the GitHub class library for the type
* Click the 'Description' link for further descriptive documentation on the field


+--------------------+-----------------------+----------------------------------------------------+---------------------+
| Field Name         | Type                  | Description                                        | Example Data        |
+====================+=======================+====================================================+=====================+
| version            | `version`_            | `Version Information`_                             | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| meta               | `meta`_               | `Meta Information`_                                | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| disposition        | `disposition`_        | `Disposition Information`_                         | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| emailVerification  | `emailVerification`_  | `Email verification. Syntax, DNS, mailbox`_        | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| infrastructure     | `infrastructure`_     | `Infrastructure details for domain web and mail`_  | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| sendAssess         | `sendAssess`_         | `Send Recommendation`_                             | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| spamAssess         | `spamAssess`_         | `Spam Assessment`_                                 | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| spamTrapAssess     | `spamTrapAssess`_     | `Spam Trap Assessment`_                            | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| hippoTrust         | `hippoTrust`_         | `Email Hippo Trust Score`_                         | 2.0                 |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| social             | `social`_             | `Social Information`_.                             | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| domain             | `domain`_             | For future use.                                    | null                |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| performance        | `performance`_        | `Performance Information`_.                        | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+
| diagnostic         | `diagnostic`_         | Diagnostic key. Future use.                        | see demo            |
+--------------------+-----------------------+----------------------------------------------------+---------------------+

.. _Version Information:

Version information
^^^^^^^^^^^^^^^^^^^
**Type info**: `version`_

Contains details of the version and edition of API and a URL to the documentation.

**Example**:

::

		"version": {
		 "v": "More-(0.8.57)",
		 "doc": null
		}


.. _Meta Information:

Meta information
^^^^^^^^^^^^^^^^
**Type info**: `meta`_

+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| Field Name         | Type                  | Description                                               | Example Data                                                       |
+====================+=======================+===========================================================+====================================================================+
| lastModified       | string                | Last modified date/time of Email Hippo record             | "Sat, 20 May 2017 12:13:36 GMT"                                    |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| expires            | string                | Date/time that this record expires from Email Hippo cache | "Mon, 19 Jun 2017 12:13:36 GMT"                                    |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| email              | string                | The email being queried                                   | "abuse@hotmail.com.br"                                             |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| tld                | string                | The Top Level Domain (TLD) of email being queried         | "com.br"                                                           |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| domain             | string                | The domain of the email being queried                     | "hotmail.com.br"                                                   |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| subDomain          | string                | The sub domain (if any) of the email being queried        | null                                                               |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| user               | string                | The user element of the email address                     | "abuse"                                                            |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| emailHashMd5       | string                | MD5 hash of the email address                             | "87da0257051ef17dd5580118ac2724f0"                                 |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| emailHashSha1      | string                | SHA1 hash of the email address                            | "c1a6e8994311d2fbe3add4c7168be86f23dab452"                         |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+
| emailHashSha256    | string                | SHA265 hash of the email address                          | "29bf2669bc8ebc263eec23ed7859cb250352b9818471f2bc54b20f7e2f3b28c8" |
+--------------------+-----------------------+-----------------------------------------------------------+--------------------------------------------------------------------+

**Example**:

::

		"meta": {
		 "lastModified": "Sat, 20 May 2017 12:13:36 GMT",
		 "expires": "Mon, 19 Jun 2017 12:13:36 GMT",
		 "email": "abuse@hotmail.com.br",
		 "tld": "com.br",
		 "domain": "hotmail.com.br",
		 "subDomain": null,
		 "user": "abuse",
		 "emailHashMd5": "87da0257051ef17dd5580118ac2724f0",
		 "emailHashSha1": "c1a6e8994311d2fbe3add4c7168be86f23dab452",
		 "emailHashSha256": "29bf2669bc8ebc263eec23ed7859cb250352b9818471f2bc54b20f7e2f3b28c8"
		}


.. _Disposition Information:

Disposition information
^^^^^^^^^^^^^^^^^^^^^^^
**Type info**: `disposition`_

+--------------------+-----------------------+-----------------------------------------------------+---------------------+
| Field Name         | Type                  | Description                                         | Example Data        |
+====================+=======================+=====================================================+=====================+
| isRole             | boolean               | Is a role address? (e.g. info@, sales@, postmaster@ | true                |
+--------------------+-----------------------+-----------------------------------------------------+---------------------+
| isFreeMail         | boolean               | Is a free mail provider? (e.g. hotmail, aol etc)    | true                |
+--------------------+-----------------------+-----------------------------------------------------+---------------------+

**Example**:

::

		"disposition": {
		 "isRole": true,
		 "isFreeMail": true
		}


.. _Email verification. Syntax, DNS, mailbox:

Email verification. Syntax, DNS, mailbox
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**Type info**: `emailVerification`_

+---------------------+------------------------+-----------------------------------------------------+---------------------+
| Field Name          | Type                   | Description                                         | Example Data        |
+=====================+========================+=====================================================+=====================+
| syntaxVerification  | `syntaxVerification`_  | `Syntax Verification`_ to RFC821                    | see example         |
+---------------------+------------------------+-----------------------------------------------------+---------------------+
| dnsVerification     | `dnsVerification`_     | `DNS Verification`_                                 | see example         |
+---------------------+------------------------+-----------------------------------------------------+---------------------+
| mailboxVerification | `mailboxVerification`_ | `Mailbox Verification`_                             | see example         |
+---------------------+------------------------+-----------------------------------------------------+---------------------+

**Example**:

::

		"emailVerification": {
		 "syntaxVerification": {
		 "isSyntaxValid": true,
		 "reason": "Success"
		},
		 "dnsVerification": {
		  "isDomainHasDnsRecord": true,
		  "isDomainHasMxRecords": true,
		  "recordRoot": {
		  "ipAddresses": [
		  "65.55.118.92",
		  "157.56.198.220"
		  ]
		 },
		 "recordWww": {
		 "ipAddresses": [
		 "157.56.198.220"
		 ]
		 },
		 "mxRecords": [
		  {
		   "preference": 5,
		   "exchange": "mx1.hotmail.com",
		   "ipAddresses": [
		    "65.55.33.135",
		    "104.44.194.236",
		    "104.44.194.237",
		    "104.44.194.235",
		    "65.54.188.72",
		    "65.54.188.126",
		    "104.44.194.234",
		    "65.55.37.88",
		    "65.55.37.104",
		    "104.44.194.233",
		   "65.55.37.72",
		   "65.55.92.184",
		   "65.55.92.168",
		   "207.46.8.167",
		   "65.55.92.136",
		   "104.44.194.232",
		   "65.55.33.119",
		   "104.44.194.231"
		  ]
		 },
		 {
		  "preference": 5,
		  "exchange": "mx2.hotmail.com",
		  "ipAddresses": [
		   "104.44.194.235",
		   "65.55.92.136",
		   "65.54.188.94",
		   "65.55.37.88",
		   "207.46.8.167",
		   "65.55.37.120",
		   "104.44.194.237",
		   "104.44.194.234",
		   "104.44.194.236",
		   "65.55.92.184",
		   "104.44.194.233",
		   "65.54.188.126",
		   "104.44.194.231",
		   "207.46.8.199",
		   "104.44.194.232",
		   "65.55.92.152",
		   "65.55.37.104",
		   "65.55.33.135",
		   "65.54.188.72"
		  ]
		 },
		 {
		  "preference": 5,
		  "exchange": "mx3.hotmail.com",
		  "ipAddresses": [
		   "65.55.37.120",
		   "65.55.92.136",
		   "65.55.92.152",
		   "104.44.194.234",
		   "65.55.33.119",
		   "65.55.92.168",
		   "104.44.194.232",
		   "65.55.37.72",
		   "104.44.194.235",
		   "104.44.194.236",
		   "65.54.188.94",
		   "65.54.188.110",
		   "207.46.8.167",
		   "104.44.194.237",
		   "104.44.194.231",
		   "65.55.37.104",
		   "104.44.194.233",
		   "65.54.188.72",
		   "207.46.8.199"
		  ]
		 },
		 {
		  "preference": 5,
		  "exchange": "mx4.hotmail.com",
		  "ipAddresses": [
		   "65.55.37.120",
		   "65.54.188.110",
		   "104.44.194.235",
		   "104.44.194.232",
		   "65.55.92.168",
		   "207.46.8.199",
		   "65.54.188.94",
		   "65.55.92.152",
		   "104.44.194.237",
		   "65.55.33.135",
		   "65.55.37.88",
		   "104.44.194.234",
		   "65.55.92.184",
		   "104.44.194.233",
		   "104.44.194.231",
		   "65.55.37.72",
		   "104.44.194.236",
		   "65.55.33.119"
		  ]
		 }
		],
		"txtRecords": [
		 "\"v=spf1 include:spf-a.hotmail.com include:spf-b.hotmail.com include:spf-c.hotmail.com include:spf-d.hotmail.com ~all\""
		 ]
		},
		"mailboxVerification": {
		 "result": "Bad",
		 "reason": "MailboxDoesNotExist"
		 }
		}


.. Syntax Verification:

Syntax verification
^^^^^^^^^^^^^^^^^^^
**Type info**: `syntaxVerification`_

+---------------------+------------------------+------------------------------------------------------------------------+---------------------+
| Field Name          | Type                   | Description                                                            | Example Data        |
+=====================+========================+========================================================================+=====================+
| isSyntaxValid       | boolean                | Is the syntax of the email address correct according to RFC standards? | true                |
+---------------------+------------------------+------------------------------------------------------------------------+---------------------+
| reason              | `syntaxReason`_        | `Syntax Verification Reason Codes`_                                    | "Success"           |
+---------------------+------------------------+------------------------------------------------------------------------+---------------------+

**Example**:

::

		"syntaxVerification": {
			"isSyntaxValid": true,
			"reason": "Success"
		}


.. Syntax Verification Reason Codes:

Syntax verification reason codes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
:None:
	No status available.

:AtSignNotFound:
	The '@' sign not found.

:DomainPartCompliancyFailure:
    The syntax of a legal Internet host name was specified in RFC-952.
    One aspect of host name syntax is hereby changed: the restriction on the first character is relaxed to allow either a letter or a digit. (http://tools.ietf.org/html/rfc1123#section-2.1)

    NB RFC 1123 updates RFC 1035, but this is not currently apparent from reading RFC 1035.
    Most common applications, including email and the Web, will generally not permit escaped strings (http://tools.ietf.org/html/rfc3696#section-2).
    The better strategy has now become to make the "at least one period" test, to verify LDH conformance (including verification that the apparent TLD name is not all-numeric)(http://tools.ietf.org/html/rfc3696#section-2)
    Characters outside the set of alphabetic characters, digits, and hyphen MUST NOT appear in domain name labels for SMTP clients or servers (http://tools.ietf.org/html/rfc5321#section-4.1.2)
    RFC5321 precludes the use of a trailing dot in a domain name for SMTP purposes (http://tools.ietf.org/html/rfc5321#section-4.1.2)

:DoubleDotSequence:
	Can't have empty element (consecutive dots or dots at the start or end)(http://tools.ietf.org/html/rfc5322#section-3.4.1)

:InvalidAddressLength:
	Email is too long.

	The maximum total length of a reverse-path or forward-path is 256 characters (including the punctuation and element separators) (http://tools.ietf.org/html/rfc5321#section-4.5.3.1.3)

:InvalidCharacterInSequence:
	Invalid character in email address.

:InvalidEmptyQuotedWord:
	Invalid Empty Quoted Word.

:InvalidFoldingWhiteSpaceSequence:
	Folding White Space.

	local-part = dot-atom / quoted-string / obs-local-part

	obs-local-part = word ("." word)(http://tools.ietf.org/html/rfc5322#section-3.4.1)

:InvalidLocalPartLength:
	Local part must be 64 characters or less.

:InvalidWordBoundaryStart:
	RFC5321 section 4.1.3.

	Character preceding IPv4 address must be ':'. RFC5321 section 4.1.3

:Success:
	Syntax verification is successful.

:TooManyAtSignsFound:
	Too many @ signs found in email address. Only one is permitted.

:UnbalancedCommentParenthesis:
	Unbalanced comment parenthesis

:UnexpectedQuotedPairSequence:
	Any ASCII graphic (printing) character other than the at-sign ("@"), backslash, double quote, comma, or square brackets may appear without quoting. If any of that list of excluded characters are to appear, they must be quoted (http://tools.ietf.org/html/rfc3696#section-3)

	Any excluded characters? i.e. 0x00-0x20, (, ), <, >, [, ], :, ;, @, \, comma, period, "

:Unknown:
	Syntax verification failed for unknown reasons.

:UnmatchedQuotedPair:
	Unmatched quoted pair.


.. DNS Verification:

DNS verification
^^^^^^^^^^^^^^^^
**Type info**: `dnsVerification`_

+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| Field Name           | Type                   | Description                                         | Example Data                                                                                                              |
+======================+========================+=====================================================+===========================================================================================================================+
| isDomainHasDnsRecord | boolean                | Does the dmain have any DNS records?                | true                                                                                                                      |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| isDomainHasMxRecords | boolean                | Does the domain have any :term:`MX` records?        | true                                                                                                                      |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| recordRoot           | `record`_              | Details of root A record for domain                 | see example                                                                                                               |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| recordWww            | `record`_              | Details of records for WWW subdomain                | see example                                                                                                               |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| mxRecords            | List of `mxrecord`_    | All :term:`MX` records for domain                   | see example                                                                                                               |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+
| txtRecords           | List of string         | All :term:`TXT` records for domain                  | "\"v=spf1 include:spf-a.hotmail.com include:spf-b.hotmail.com include:spf-c.hotmail.com include:spf-d.hotmail.com ~all\"" |
+----------------------+------------------------+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------+



**Example**:

::

		"dnsVerification": {
		 "isDomainHasDnsRecord": true,
		 "isDomainHasMxRecords": true,
		 "recordRoot": {
		 "ipAddresses": [
		  "65.55.118.92",
		  "157.56.198.220"
		 ]
		},
		"recordWww": {
		 "ipAddresses": [
		 "157.56.198.220"
		 ]
		},
		"mxRecords": [
		 {
		  "preference": 5,
		  "exchange": "mx1.hotmail.com",
		  "ipAddresses": [
		   "65.55.33.135",
		   "104.44.194.236",
		   "104.44.194.237",
		   "104.44.194.235",
		   "65.54.188.72",
		   "65.54.188.126",
		   "104.44.194.234",
		   "65.55.37.88",
		   "65.55.37.104",
		   "104.44.194.233",
		   "65.55.37.72",
		   "65.55.92.184",
		   "65.55.92.168",
		   "207.46.8.167",
		   "65.55.92.136",
		   "104.44.194.232",
		   "65.55.33.119",
		   "104.44.194.231"
		  ]
		 },
		 {
		 "preference": 5,
		 "exchange": "mx2.hotmail.com",
		 "ipAddresses": [
		  "104.44.194.235",
		  "65.55.92.136",
		  "65.54.188.94",
		  "65.55.37.88",
		  "207.46.8.167",
		  "65.55.37.120",
		  "104.44.194.237",
		  "104.44.194.234",
		  "104.44.194.236",
		  "65.55.92.184",
		  "104.44.194.233",
		  "65.54.188.126",
		  "104.44.194.231",
		  "207.46.8.199",
		  "104.44.194.232",
		  "65.55.92.152",
		  "65.55.37.104",
		  "65.55.33.135",
		  "65.54.188.72"
		  ]
		 },
		 {
		 "preference": 5,
		 "exchange": "mx3.hotmail.com",
		 "ipAddresses": [
		  "65.55.37.120",
		  "65.55.92.136",
		  "65.55.92.152",
		  "104.44.194.234",
		  "65.55.33.119",
		  "65.55.92.168",
		  "104.44.194.232",
		  "65.55.37.72",
		  "104.44.194.235",
		  "104.44.194.236",
		  "65.54.188.94",
		  "65.54.188.110",
		  "207.46.8.167",
		  "104.44.194.237",
		  "104.44.194.231",
		  "65.55.37.104",
		  "104.44.194.233",
		  "65.54.188.72",
		  "207.46.8.199"
		  ]
		 },
		 {
		 "preference": 5,
		 "exchange": "mx4.hotmail.com",
		 "ipAddresses": [
		  "65.55.37.120",
		  "65.54.188.110",
		  "104.44.194.235",
		  "104.44.194.232",
		  "65.55.92.168",
		  "207.46.8.199",
		  "65.54.188.94",
		  "65.55.92.152",
		  "104.44.194.237",
		  "65.55.33.135",
		  "65.55.37.88",
		  "104.44.194.234",
		  "65.55.92.184",
		  "104.44.194.233",
		  "104.44.194.231",
		  "65.55.37.72",
		  "104.44.194.236",
		  "65.55.33.119"
		  ]
		 }
		],
		"txtRecords": [
		 "\"v=spf1 include:spf-a.hotmail.com include:spf-b.hotmail.com include:spf-c.hotmail.com include:spf-d.hotmail.com ~all\""
		 ]
		}



.. Mailbox Verification:

Mailbox verification
^^^^^^^^^^^^^^^^^^^^
**Type info**: `mailboxVerification`_

+---------------------+------------------------+-----------------------------------------------------+-----------------------+
| Field Name          | Type                   | Description                                         | Example Data          |
+=====================+========================+=====================================================+=======================+
| result              | `result`_              | `Primary Result Codes`_                             | "Bad"                 |
+---------------------+------------------------+-----------------------------------------------------+-----------------------+
| reason              | `reason`_              | `Secondary Reason Codes`_                           | "MailboxDoesNotExist" |
+---------------------+------------------------+-----------------------------------------------------+-----------------------+

**Example**:

::

		"mailboxVerification": {
		 "result": "Bad",
		 "reason": "MailboxDoesNotExist"
		}


.. _Primary Result Codes:

Primary result codes
^^^^^^^^^^^^^^^^^^^^
:None:
	No status available.

:Ok:
	Verification passes all checks including Syntax, :term:`DNS`,
	:term:`MX`, Mailbox, Deep Server Configuration, :term:`Grey Listing`

:Bad:
	Verification fails checks for definitive reasons (e.g. mailbox does not exist)

:RetryLater:
	Conclusive verification result cannot be achieved at this time. Please try again later. - This is ShutDowns, IPBlock, TimeOuts

:Unverifiable:
	Conclusive verification result cannot be achieved due to mail server configuration
	or anti-spam measures. See `Secondary Reason Codes`_.

.. _Secondary Reason Codes:

Secondary reason codes
^^^^^^^^^^^^^^^^^^^^^^


**Primary result codes with their possible secondary reason codes**

:Ok:
  Success

:Bad:
  AtSignNotFound

  DomainIsInexistent

  MailboxFull

  MailboxDoesNotExist

  MailServerFaultDetected

  NoMxServersFound

  ServerDoesNotSupportInternationalMailboxes

  TooManyAtSignsFound

  PossibleSpamTrapDetected

:RetryLater:
  TransientNetworkFault

:Unverifiable:
  None

  DomainIsWellKnownDea

  GreyListing

  ServerIsCatchAll

  Unknown

  UpredictableSystem


**Secondary reason code definitions**


:None:
	No additional information is available.

	This status differs from a TransientNetworkFault as it should not be retried
	(the result will not change).

	There are a few known reasons for this status code for example a mail provider implementing custom mailbox shutdowns.

:AtSignNotFound:
	The required '@' sign is not found in email address.

:DomainIsInexistent:
	The domain (i.e. the bit after the '@' character) defined in the email address
	does not exist, according to :term:`DNS` records.

	A domain that does not exist cannot have email boxes.

:DomainIsWellKnownDea:
	The domain is a well known Disposable Email Address :term:`DEA`.

	There are many services available that permit users to use a one-time
	only email address. Typically, these email addresses are used by
	individuals wishing to gain access to content or services requiring
	registration of email addresses but same individuals not wishing to
	divulge their true identities (e.g. permanent email addresses).

	:term:`DEA` addresses should not be regarded as valid for email
	send purposes as it is unlikely that messages sent to :abbr:`DEA(Disposable Email Address)`
	addresses will ever be read.

:GreyListing:
	:term:`Grey Listing` is in operation. It is not possible to validate email boxes in real-time where grey listing is in operation.

:MailboxFull:
	The mailbox is full.

	Mailboxes that are full are unable to receive any further email
	messages until such time as the user empties the mail box or the
	system administrator grants extra storage quota.

	Most full mailboxes usually indicate accounts that have been
	abandoned by users and will therefore never be looked at again.

	We do not recommend sending emails to email addresses identified
	as *full*.

:MailboxDoesNotExist:
	The mailbox does not exist.

	100% confidence that the mail box does not exist.

:MailServerFaultDetected:
	An unspecified mail server fault was detected.
	
:NoMxServersFound:
	There are no mail servers defined for this domain, according to :term:`DNS`.

	Email addresses cannot be valid if there are no email servers
	defined in :term:`DNS` for the domain.

:ServerDoesNotSupportInternationalMailboxes:
	The server does not support international mailboxes.

	International email boxes are those that use international
	character sets such as Chinese / Kanji etc.

	International email boxes require systems in place for :term:`Punycode`
	translation.

	Where these systems are not in place, email verification or delivery
	is not possible.

	For further information see :term:`Punycode`.

:ServerIsCatchAll:
	The server is configured for *catch all* and responds to all
	email verifications with a status of *Ok*.

	Mail servers can be configured with a policy known as *Catch All*.
	Catch all redirects any email address sent to a particular
	domain to a central email box for manual inspection. Catch all
	configured servers cannot respond to requests for email address verification.

:Success:
	Successful verification.

	100% confidence that the mailbox exists.

:TooManyAtSignsFound:
	Too many '@' signs found in email address.

	Only one '@' character is allowed in email addresses.

:Unknown:
	The reason for the verification result is unknown.
	
:UpredictableSystem:
	Upredictable system infrastructure detected.
	
	Various email services deliver unpredictable results to email address verification.
	
	The reason for this unpredictability is that some email systems elect not to implement email standards (i.e. RFC 2821).
	
	For systems that are known to be unpredictable, we return a secondary status of UpredictableSystem.
	
:TransientNetworkFault:
	A temporary network fault occurred during verification. Please try again later.

	Verification operations on remote mail servers can sometimes fail for a number
	of reasons such as loss of network connection, remote servers timing out etc.

	These conditions are usually temporary. Retrying verification at a later time
	will usually result in a positive response from mail servers.

	Please note that setting an infinite retry policy around this status code is
	inadvisable as there is no way of knowing when the issue will be resolved within
	the target domain or the grey listing resolved, and this may affect your daily quota.

:PossibleSpamTrapDetected:
	A possible spam trap email address or domain has been detected.

	Spam traps are email addresses or domains deliberately placed on-line
	in order to capture and flag potential spam based operations.

	Our advanced detection heuristics are capable of detecting likely
	spam trap addresses or domains known to be associated with spam trap techniques.

	We do not recommend sending emails to addresses identified as associated
	with known spam trap behaviour.

	Sending emails to known spam traps or domains will result in your :term:`ESP`
	being subjected to email blocks from a :term:`DNS` :term:`Block List`.

	An :term:`ESP` cannot tolerate entries in a :term:`Block List` (as it adversely
	affects email deliverability for all customers) and will actively refuse
	to send emails on behalf of customers with a history of generating entries in a :term:`Block List`.

.. Infrastructure details for domain web and mail:

Infrastructure details for domain web and mail
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**Type info**: `infrastructure`_

+---------------------+------------------------+-----------------------------------------------------+-----------------------+
| Field Name          | Type                   | Description                                         | Example Data          |
+=====================+========================+=====================================================+=======================+
| mail                | `mailInfrastructure`_  | `Mail Infrastructure`_                              | see example           |
+---------------------+------------------------+-----------------------------------------------------+-----------------------+
| web                 | `webInfrastructure`_   | `Web Infrastructure`_                               | see example           |
+---------------------+------------------------+-----------------------------------------------------+-----------------------+

**Example**:

::

	"infrastructure": {
	 "mail": {
	  "serviceTypeId": "Hotmail",
	  "mailServerLocation": "US",
	  "smtpBanner": "220 SNT004-MC9F19.hotmail.com Sending unsolicited commercial or bulk e-mail to Microsoft's computer network is prohibited. Other restrictions are found at http://privacy.microsoft.com/en-us/anti-spam.mspx. Sat, 20 May 2017 05:13:34 -0700"
	 },
	"web": {
	 "hasAliveWebServer": true
	 }
	}


.. Mail Infrastructure:

Mail infrastructure
^^^^^^^^^^^^^^^^^^^
**Type info**: `mailInfrastructure`_

+---------------------+------------------------+---------------------------------------------------------+-----------------------+
| Field Name          | Type                   | Description                                             | Example Data          |
+=====================+========================+=========================================================+=======================+
| serviceTypeId       | `serviceTypeId`_       | `Service Type Identifier`_.                             | "Hotmail"             |
+---------------------+------------------------+---------------------------------------------------------+-----------------------+
| mailServerLocation  | string                 | Mail server location. 2 digit ISO code.                 | "US"                  |
+---------------------+------------------------+---------------------------------------------------------+-----------------------+
| smtpBanner          | string                 | :term:`SMTP` banner received on connect to mail server. | see example           |
+---------------------+------------------------+---------------------------------------------------------+-----------------------+

**Example**:

::

	"mail": {
	 "serviceTypeId": "Hotmail",
	 "mailServerLocation": "US",
	 "smtpBanner": "220 SNT004-MC9F19.hotmail.com Sending unsolicited commercial or bulk e-mail to Microsoft's computer network is prohibited. Other restrictions are found at http://privacy.microsoft.com/en-us/anti-spam.mspx. Sat, 20 May 2017 05:13:34 -0700"
	}



.. Service Type Identifier:

Service type identifier
^^^^^^^^^^^^^^^^^^^^^^^
**Type info**: `serviceTypeId`_

:Other:
	Service not of pre-defined list of known types.

:Aol:
	AOL.

:Hotmail:
	Hotmail.

:Gmail:
	Gmail.

:GoogleForBiz:
	Google for business.

:MessageLabs:
	Symantec message labs.

:Net4Sec:
	Net4Sec.

:Office365:
	Microsoft Office 365.

:Yahoo:
	Yahoo.

:UceProtect:
	UCE Protect.


.. Web Infrastructure:

Web infrastructure
^^^^^^^^^^^^^^^^^^
**Type info**: `webInfrastructure`_

Email Hippo performs a PING to establish whether a domain has a working web server / web site. A domain without a working website can be an indicator of low quality email domains.

+---------------------+------------------------+--------------------------------------------------------------+-----------------------+
| Field Name          | Type                   | Description                                                  | Example Data          |
+=====================+========================+==============================================================+=======================+
| hasAliveWebServer   | boolean                | Determines if domain has a web server that responds to PING. | true                  |
+---------------------+------------------------+--------------------------------------------------------------+-----------------------+

**Example**:

::

	"web": {
	 "hasAliveWebServer": true
	 }


.. Send Assesment:

Send assessment
^^^^^^^^^^^^^^^
**Type info**: `sendAssess`_

Email Hippo performs an assessment of the risk associated with sending email to the email address queried. The overall score is based on a number of factors including:

* If the domain is determined to be a :term:`DEA`
* If the mailbox is verified as 'Ok' or 'Good'
* Whether the email domain is listed in third party lists (e.g. SpamHaus)
* Whether the domain is determined to be FreeMail or is a role address
* Whether the domain has a working web site

+---------------------+------------------------+--------------------------------------------------------------+-----------------------+
| Field Name          | Type                   | Description                                                  | Example Data          |
+=====================+========================+==============================================================+=======================+
| inboxQualityScore   | decimal                | Inbox quality score.                                         | 0.1                   |
+---------------------+------------------------+--------------------------------------------------------------+-----------------------+
| sendRecommendation  | `sendAssesType`_       | `Send recommendation`_.                                      | "DoNotSend"           |
+---------------------+------------------------+--------------------------------------------------------------+-----------------------+

.. Send Recommendation:

Send recommendation
^^^^^^^^^^^^^^^^^^^

:None:
	No recommendation.

:SafeToSend:
	Safe to send email. Minimal risk of hard bounces or complaints.

:DoNotSend:
	Do not send. Hight risk of hard bounce and complaints.

:RiskyToSend:
	Sending to this email address is risky. Hard bounces and complaints are possible. Send at your own risk.


**Example**:

::

	"sendAssess": {
	 "inboxQualityScore": 0.1,
	 "sendRecommendation": "DoNotSend"
	}


.. Spam Assessment

Spam assessment
^^^^^^^^^^^^^^^
**Type info**: `spamAssess`_

Email Hippo performs an assesment of the risk associated with receiving email from the address queried. The overall score is based on a number of factors from the table below.


+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| Field Name               | Type                         | Description                                                           | Example Data          |
+==========================+==============================+=======================================================================+=======================+
| isDisposableEmailAddress | boolean                      | Is the email domain a :term:`DEA`?                                    | false                 |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| isDarkWebEmailAddress    | boolean                      | Is the email address domain hosted in the Dark Web?                   | false                 |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| isGibberishDomain        | boolean                      | Is the email address domain deemed to be gibberish text?              | false                 |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| isGibberishUser          | boolean                      | Is the email address user deemed to be gibberish text?                | false                 |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| domainRiskScore          | decimal                      | General risk score of email address domain.                           | 0                     |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| formatRiskScore          | decimal                      | Format risk score of email address.                                   | 0                     |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| profanityRiskScore       | decimal                      | Profanity risk score of email address.                                | 0                     |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| overallRiskScore         | decimal                      | Overall risk score for spam from this email address.                  | 0                     |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| actionRecomendation      | `actionRecommendationType`_  | What action should you take if receiving email from email address.    | "Allow"               |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+
| blockLists               | List of `blockList`_         | `Blocklists`_.                                                        | see example           |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------+


**Example**:

::

	"spamAssess": {
	 "isDisposableEmailAddress": false,
	 "isDarkWebEmailAddress": false,
	 "isGibberishDomain": false,
	 "isGibberishUser": false,
	 "domainRiskScore": 0,
	 "formatRiskScore": 0,
	 "profanityRiskScore": 0,
	 "overallRiskScore": 0,
	 "actionRecomendation": "Allow",
	 "blockLists": [
	  {
	   "blockListName": "spamhaus",
	   "isListed": false,
	   "listedReason": null,
	   "listedMoreInfo": null
	  }
	 ]
	}


.. Blocklists:

Blocklists
^^^^^^^^^^
**Type info**: List of `blockList`_

Email Hippo includes references to third party spam block lists to enrich it's own email verification information.

Initially (on launch of v3), we include references to SpamHaus Domain Block List (DBL). 

.. Note:: Email Hippo may add additional data sources for blocklists in the future.

+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| Field Name               | Type                         | Description                                                           | Example Data                                        |
+==========================+==============================+=======================================================================+=====================================================+
| blockListName            | string                       | Name of block list.                                                   | "spamhaus"                                          |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| isListed                 | boolean                      | Is the email address domain listed in the block list?                 | true                                                |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| listedReason             | string                       | If the email address domain is listed in the block list, then why?    | "127.0.1.2"                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| listedMoreInfo           | string                       | Any additional information provided from the block list on reason(s)  | "https://www.spamhaus.org/query/domain/dbltest.com" |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+

**Example**:

::

	"blockLists": [
	  {
	  "blockListName": "spamhaus",
	  "isListed": true,
	  "listedReason": "127.0.1.2",
	  "listedMoreInfo": "https://www.spamhaus.org/query/domain/dbltest.com"
	  }
	 ]


.. Spam Trap Assessment:

Spam trap assessment
^^^^^^^^^^^^^^^^^^^^
**Type info**: List of `spamTrapAssess`_

Email Hippo maintains a list of known :term:`Spam Trap`.

+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| Field Name               | Type                         | Description                                                           | Example Data                                        |
+==========================+==============================+=======================================================================+=====================================================+
| isSpamTrap               | boolean                      | Is this email address a known spam trap?                              | true                                                |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| spamTrapDescriptor       | string                       | Description of spam trap.                                             | "uceprotect"                                        |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+


**Example**:

::

	"spamTrapAssess": {
		"isSpamTrap": true,
		"spamTrapDescriptor": "uceprotect"
		}


.. Hippo Trust:

Email Hippo Trust Score
^^^^^^^^^^^^^^^^^^^^^^^
**Type info**: List of `hippoTrust`_

For email verification and data enrichment performed to the 'More' level, Email Hippo supplies a Trust Score.

**About the Email Hippo Trust Score**
Email Hippo created the Trust Score to provide an 'at a glance' determination of quality from the point of view of drilling deeper than just the email address itself.

Email Hippo Trust Score is designed to answer a fundamental question posed from the perspective of a business owner, merchant, data broker or lead generation service:

*How much can I trust the person associated with this email address?*

The Trust Score takes dozens of metrics and signals into consideration when making this assesment and providing the final score.

+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| Field Name               | Type                         | Description                                                           | Example Data                                        |
+==========================+==============================+=======================================================================+=====================================================+
| score                    | decimal                      | *How much can I trust the person associated with this email address?* | 0.1                                                 |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| level                    | `trustLevelType`_            | `Trust level`_.                                                       | "Low"                                               |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+

.. Hippo Trust Level:

Trust level
^^^^^^^^^^^
**Type info**: `trustLevelType`_


+----------------------+----------------------------------+---------------------+
| Trust Level          | Description                      | Score range         |
+======================+==================================+=====================+
| None                 | No information on trust          |                     |
+----------------------+----------------------------------+---------------------+
| Low                  | Low trust level                  | Less than 2.66      |
+----------------------+----------------------------------+---------------------+
| Medium               | Medium trust level               | 2.66 to 6.99        |
+----------------------+----------------------------------+---------------------+
| High                 | High trust level                 | 7 to 10             |
+----------------------+----------------------------------+---------------------+



	
**Example**:

::

	"hippoTrust": {
	 "score": 0.1,
	 "level": "Low"
	}

	
.. Social Information:

Social information
^^^^^^^^^^^^^^^^^^
**Type info:** `social`_

Email Hippo can provide social data. On initial launch of v3, Gravatar information is supplied.

+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| Field Name               | Type                         | Description                                                           | Example Data                                        |
+==========================+==============================+=======================================================================+=====================================================+
| social                   | `social`_                    | Social information associated with email address                      | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+


**Example**:

::

	"social": {
	 "gravatar": {
	  "imageUrl": "//www.gravatar.com/avatar/87da0257051ef17dd5580118ac2724f0",
	  "profileUrl": "//www.gravatar.com/87da0257051ef17dd5580118ac2724f0"
	 }
	}

	
.. Performance Information:
	
Performance information
^^^^^^^^^^^^^^^^^^^^^^^
**Type info:** `performance`_

Detailed performance metrics are provided for all queries. All timings are expressed in milliseconds.

+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| Field Name               | Type                         | Description                                                           | Example Data                                        |
+==========================+==============================+=======================================================================+=====================================================+
| syntaxCheck              | integer                      | Processing time to check syntax of email address.                     | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| dnsLookup                | integer                      | Processing time to gather and check :term:`DNS` of email address.     | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| spamAssessment           | integer                      | Processing time to assess email address for spam behavior.            | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| mailboxVerification      | integer                      | Processing time to check mail box of email address.                   | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| webInfrastructurePing    | integer                      | Processing time to PING web site of email address.                    | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| other                    | integer                      | Processing time for miscellaneous processing of email address.        | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+
| overallExecutionTime     | integer                      | Total processing time.                                                | see example                                         |
+--------------------------+------------------------------+-----------------------------------------------------------------------+-----------------------------------------------------+


**Example**:

::

	"performance": {
	 "syntaxCheck": 0,
	 "dnsLookup": 250,
	 "spamAssessment": 0,
	 "mailboxVerification": 5348,
	 "webInfrastructurePing": 0,
	 "other": 0,
	 "overallExecutionTime": 5598
	}


	
Response header
---------------

..	_HTTP Status Codes:

HTTP status codes
^^^^^^^^^^^^^^^^^
In additional to the application level codes (see `Primary Result Codes`_ and `Secondary Reason Codes`_)
returned in the :term:`HTTP` message body, :term:`HTTP` status codes are returned in the :term:`HTTP` header.

:200:
	Call successful.

:400:
	Bad request. The server could not understand the request. Perhaps missing a license key or an email to check?
	Conditions that lead to this error are: No license key supplied, no email address supplied, email address > 255
	characters, license key in incorrect format.

:401:
	Possible reasons: The provided license key is not valid, the provided license key has expired,
	you have reached your quota capacity for this account,
	this account has been disabled.
	
:429:
	Too many requests. See :doc:`concurrency` for further information.

:50x:
	An error occurred on the server. Possible reasons are: license key validation failed or
	a general server fault.
